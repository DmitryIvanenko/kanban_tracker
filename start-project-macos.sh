#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${GREEN}üöÄ –ó–∞–ø—É—Å–∫ Kanban Tracker –Ω–∞ macOS${NC}"
echo "=================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker
if ! command -v docker &> /dev/null; then
    echo -e "${RED}‚ùå Docker –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop –¥–ª—è macOS${NC}"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è docker compose
if ! docker compose version &> /dev/null; then
    echo -e "${RED}‚ùå Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±–Ω–æ–≤–∏—Ç–µ Docker Desktop${NC}"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è .env —Ñ–∞–π–ª–∞
if [ ! -f .env ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞—é –∏–∑ –ø—Ä–∏–º–µ—Ä–∞...${NC}"
    cp .env.example .env
    echo -e "${GREEN}‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –µ–≥–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏${NC}"
fi

# –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ SSL –ø—Ä–æ–±–ª–µ–º
echo -e "${BLUE}üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ SSL –æ–∫—Ä—É–∂–µ–Ω–∏—è...${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
if ! docker run --rm alpine:latest sh -c "apk update" &> /dev/null; then
    echo -e "${YELLOW}‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞–º–∏ Alpine${NC}"
fi

if ! docker run --rm python:3.11-slim sh -c "pip install --upgrade pip" &> /dev/null; then
    echo -e "${YELLOW}‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞–º–∏ Python/pip${NC}"
fi

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo -e "${YELLOW}üîÑ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...${NC}"
docker compose down &> /dev/null
docker compose -f docker-compose.macos.yml down &> /dev/null

# –û—á–∏—Å—Ç–∫–∞ Docker –∫–µ—à–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
read -p "–û—á–∏—Å—Ç–∏—Ç—å Docker –∫–µ—à? (y/N): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo -e "${YELLOW}üßπ –û—á–∏—Å—Ç–∫–∞ Docker –∫–µ—à–∞...${NC}"
    docker system prune -f --volumes
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—É—é –ø–µ—Ä–µ—Å–±–æ—Ä–∫—É
read -p "–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –±–µ–∑ –∫–µ—à–∞? (y/N): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    BUILD_ARGS="--no-cache --pull"
else
    BUILD_ARGS=""
fi

# –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo -e "${YELLOW}üèóÔ∏è  –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ —Å macOS –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è–º–∏...${NC}"
echo -e "${BLUE}üìù –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ Dockerfile –¥–ª—è –æ–±—Ö–æ–¥–∞ SSL –ø—Ä–æ–±–ª–µ–º${NC}"

if ! docker compose -f docker-compose.macos.yml up -d --build $BUILD_ARGS; then
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤${NC}"
    echo -e "${YELLOW}üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —Ä–µ—à–µ–Ω–∏—è:${NC}"
    echo "1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–æ–π –∫–µ—à–∞"
    echo "2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ README.macOS.md –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π"
    echo "3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–±–æ—Ä–∫—É —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π:"
    echo "   docker compose -f docker-compose.macos.yml build --platform linux/amd64"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
echo -e "${YELLOW}‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"
sleep 15

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤
echo -e "${YELLOW}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"
docker compose -f docker-compose.macos.yml ps

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
echo -e "${YELLOW}üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ backend
if curl -f http://localhost:8000/health > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Backend –¥–æ—Å—Ç—É–ø–µ–Ω: http://localhost:8000${NC}"
else
    echo -e "${RED}‚ùå Backend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
    echo -e "${YELLOW}üìã –õ–æ–≥–∏ backend:${NC}"
    docker compose -f docker-compose.macos.yml logs --tail=10 backend
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ frontend
if curl -f http://localhost:3000 > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Frontend –¥–æ—Å—Ç—É–ø–µ–Ω: http://localhost:3000${NC}"
else
    echo -e "${RED}‚ùå Frontend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
    echo -e "${YELLOW}üìã –õ–æ–≥–∏ frontend:${NC}"
    docker compose -f docker-compose.macos.yml logs --tail=10 frontend
fi

echo ""
echo -e "${GREEN}üéâ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ!${NC}"
echo "=================================="
echo "üåê Frontend: http://localhost:3000"
echo "üîß Backend API: http://localhost:8000"
echo "üìö API Docs: http://localhost:8000/docs"
echo ""
echo -e "${BLUE}üîß –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è macOS:${NC}"
echo "  - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è docker-compose.macos.yml"
echo "  - –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ Dockerfile —Å –æ–±—Ö–æ–¥–æ–º SSL"
echo "  - Trusted hosts –¥–ª—è pip"
echo "  - HTTP —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –¥–ª—è Alpine"
echo ""
echo "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  docker compose -f docker-compose.macos.yml logs -f    # –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤"
echo "  docker compose -f docker-compose.macos.yml down       # –û—Å—Ç–∞–Ω–æ–≤–∫–∞"
echo "  docker compose -f docker-compose.macos.yml ps         # –°—Ç–∞—Ç—É—Å"
echo ""
echo -e "${YELLOW}üìù –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: docker compose -f docker-compose.macos.yml down${NC}"
echo -e "${YELLOW}üìñ –ü–æ–¥—Ä–æ–±–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: README.macOS.md${NC}" 